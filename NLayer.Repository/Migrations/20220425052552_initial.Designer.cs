// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220425052552_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayer.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(5175),
                            IsActive = true,
                            Name = "Stationary"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(5194),
                            IsActive = true,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(5196),
                            IsActive = true,
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(5201),
                            IsActive = true,
                            Name = "Grocery"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6164),
                            CustomerTypeId = 1,
                            Email = "seftalisena@gmail.com",
                            IsActive = true,
                            LastName = "ŞEFTALİ",
                            Name = "Sena"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6168),
                            CustomerTypeId = 2,
                            Email = "seftali@gmail.com",
                            IsActive = true,
                            LastName = "ŞEFTALİ",
                            Name = "Fatih"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6170),
                            CustomerTypeId = 3,
                            Email = "seftali@gmail.com",
                            IsActive = true,
                            LastName = "ŞEFTALİ",
                            Name = "Ayşe"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6172),
                            CustomerTypeId = 4,
                            Email = "seftali@gmail.com",
                            IsActive = true,
                            LastName = "ŞEFTALİ",
                            Name = "Ekrem"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6495),
                            IsActive = true,
                            Name = "Employee"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6498),
                            IsActive = true,
                            Name = "Affiliate"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6500),
                            IsActive = true,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6502),
                            IsActive = true,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DiscountTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId")
                        .IsUnique();

                    b.ToTable("Discounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6791),
                            CustomerTypeId = 1,
                            IsActive = true,
                            Name = "Rate",
                            Rate = 30m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6794),
                            CustomerTypeId = 4,
                            IsActive = true,
                            Name = "Amount",
                            Rate = 5m
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6796),
                            CustomerTypeId = 3,
                            IsActive = true,
                            Name = "Rate",
                            Rate = 5m
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(6904),
                            CustomerTypeId = 2,
                            IsActive = true,
                            Name = "Rate",
                            Rate = 10m
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Invoices", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(8202),
                            CustomerId = 1,
                            IsActive = true,
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(8207),
                            CustomerId = 2,
                            IsActive = true,
                            OrderId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(8209),
                            CustomerId = 3,
                            IsActive = true,
                            OrderId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(8211),
                            CustomerId = 4,
                            IsActive = true,
                            OrderId = 4
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.InvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId")
                        .IsUnique();

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.ToTable("InvoiceDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(7194),
                            DiscountId = 1,
                            InvoiceId = 1,
                            IsActive = true,
                            Price = 1500m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(7197),
                            DiscountId = 2,
                            InvoiceId = 2,
                            IsActive = true,
                            Price = 2500m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(7199),
                            DiscountId = 3,
                            InvoiceId = 3,
                            IsActive = true,
                            Price = 7500m,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(7201),
                            DiscountId = 4,
                            InvoiceId = 4,
                            IsActive = true,
                            Price = 5500m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9017),
                            CustomerId = 1,
                            IsActive = true,
                            Status = 1,
                            TotalAmount = 1000m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9020),
                            CustomerId = 2,
                            IsActive = true,
                            Status = 1,
                            TotalAmount = 2000m
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9022),
                            CustomerId = 3,
                            IsActive = true,
                            Status = 1,
                            TotalAmount = 3000m
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9024),
                            CustomerId = 4,
                            IsActive = true,
                            Status = 1,
                            TotalAmount = 4000m
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 4,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            ProductId = 7,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            ProductId = 5,
                            Quantity = 0
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 4,
                            ProductId = 3,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9379),
                            IsActive = true,
                            Name = "Kalem 1",
                            Price = 100m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9382),
                            IsActive = true,
                            Name = "Fabel Castel Pencil",
                            Price = 200m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9383),
                            IsActive = true,
                            Name = "Rotring Pencil",
                            Price = 600m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9385),
                            IsActive = true,
                            Name = "Pc",
                            Price = 600m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9387),
                            IsActive = true,
                            Name = "Pasta",
                            Price = 50m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9389),
                            IsActive = true,
                            Name = "Meet",
                            Price = 100m,
                            Stock = 60
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 4, 25, 8, 25, 51, 226, DateTimeKind.Local).AddTicks(9391),
                            IsActive = true,
                            Name = "Phone",
                            Price = 6600m,
                            Stock = 320
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Kırmızı",
                            Height = 100,
                            ProductId = 1,
                            Width = 200
                        },
                        new
                        {
                            Id = 2,
                            Color = "Mavi",
                            Height = 300,
                            ProductId = 2,
                            Width = 500
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Customer", b =>
                {
                    b.HasOne("NLayer.Core.Models.CustomerType", "CustomerType")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("NLayer.Core.Models.Discount", b =>
                {
                    b.HasOne("NLayer.Core.Models.CustomerType", "CustomerType")
                        .WithOne("Discount")
                        .HasForeignKey("NLayer.Core.Models.Discount", "CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("NLayer.Core.Models.Invoice", b =>
                {
                    b.HasOne("NLayer.Core.Models.Customer", "Customer")
                        .WithOne("Invoice")
                        .HasForeignKey("NLayer.Core.Models.Invoice", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Order", "Order")
                        .WithOne("Invoice")
                        .HasForeignKey("NLayer.Core.Models.Invoice", "OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("NLayer.Core.Models.InvoiceDetail", b =>
                {
                    b.HasOne("NLayer.Core.Models.Discount", "Discount")
                        .WithOne("InvoiceDetail")
                        .HasForeignKey("NLayer.Core.Models.InvoiceDetail", "DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Invoice", "Invoice")
                        .WithOne("InvoiceDetail")
                        .HasForeignKey("NLayer.Core.Models.InvoiceDetail", "InvoiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("NLayer.Core.Models.Order", b =>
                {
                    b.HasOne("NLayer.Core.Models.Customer", "Customer")
                        .WithOne("Order")
                        .HasForeignKey("NLayer.Core.Models.Order", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NLayer.Core.Models.OrderDetail", b =>
                {
                    b.HasOne("NLayer.Core.Models.Order", "Order")
                        .WithOne("OrderDetail")
                        .HasForeignKey("NLayer.Core.Models.OrderDetail", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Product", "Product")
                        .WithOne("OrderDetail")
                        .HasForeignKey("NLayer.Core.Models.OrderDetail", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayer.Core.Models.Product", b =>
                {
                    b.HasOne("NLayer.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayer.Core.Models.ProductFeature", b =>
                {
                    b.HasOne("NLayer.Core.Models.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("NLayer.Core.Models.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayer.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NLayer.Core.Models.Customer", b =>
                {
                    b.Navigation("Invoice");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("NLayer.Core.Models.CustomerType", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("NLayer.Core.Models.Discount", b =>
                {
                    b.Navigation("InvoiceDetail");
                });

            modelBuilder.Entity("NLayer.Core.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetail");
                });

            modelBuilder.Entity("NLayer.Core.Models.Order", b =>
                {
                    b.Navigation("Invoice");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("NLayer.Core.Models.Product", b =>
                {
                    b.Navigation("OrderDetail");

                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
